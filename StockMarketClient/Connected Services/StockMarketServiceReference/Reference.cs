//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockMarketClient.StockMarketServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockMarketServiceReference.IStockMarket")]
    public interface IStockMarket {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Login", ReplyAction="http://tempuri.org/IStockMarket/LoginResponse")]
        DataLayer.Entities.Member Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Login", ReplyAction="http://tempuri.org/IStockMarket/LoginResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Member> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Register", ReplyAction="http://tempuri.org/IStockMarket/RegisterResponse")]
        DataLayer.Entities.Member Register(DataLayer.Entities.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Register", ReplyAction="http://tempuri.org/IStockMarket/RegisterResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Member> RegisterAsync(DataLayer.Entities.Member member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/CreateStock", ReplyAction="http://tempuri.org/IStockMarket/CreateStockResponse")]
        DataLayer.Entities.Stock CreateStock(DataLayer.Entities.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/CreateStock", ReplyAction="http://tempuri.org/IStockMarket/CreateStockResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Stock> CreateStockAsync(DataLayer.Entities.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/UpdateStock", ReplyAction="http://tempuri.org/IStockMarket/UpdateStockResponse")]
        DataLayer.Entities.Stock UpdateStock(DataLayer.Entities.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/UpdateStock", ReplyAction="http://tempuri.org/IStockMarket/UpdateStockResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Stock> UpdateStockAsync(DataLayer.Entities.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStocks", ReplyAction="http://tempuri.org/IStockMarket/GetStocksResponse")]
        DataLayer.Entities.Stock[] GetStocks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStocks", ReplyAction="http://tempuri.org/IStockMarket/GetStocksResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Stock[]> GetStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStock", ReplyAction="http://tempuri.org/IStockMarket/GetStockResponse")]
        DataLayer.Entities.Stock GetStock(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStock", ReplyAction="http://tempuri.org/IStockMarket/GetStockResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Stock> GetStockAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/DeleteStock", ReplyAction="http://tempuri.org/IStockMarket/DeleteStockResponse")]
        bool DeleteStock(int stockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/DeleteStock", ReplyAction="http://tempuri.org/IStockMarket/DeleteStockResponse")]
        System.Threading.Tasks.Task<bool> DeleteStockAsync(int stockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Add", ReplyAction="http://tempuri.org/IStockMarket/AddResponse")]
        DataLayer.Entities.StockMarketOffDates Add(DataLayer.Entities.StockMarketOffDates stockMarketOffDates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Add", ReplyAction="http://tempuri.org/IStockMarket/AddResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.StockMarketOffDates> AddAsync(DataLayer.Entities.StockMarketOffDates stockMarketOffDates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Delete", ReplyAction="http://tempuri.org/IStockMarket/DeleteResponse")]
        bool Delete(int stockMarketOffDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/Delete", ReplyAction="http://tempuri.org/IStockMarket/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int stockMarketOffDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStockMarketOffDates", ReplyAction="http://tempuri.org/IStockMarket/GetStockMarketOffDatesResponse")]
        DataLayer.Entities.StockMarketOffDates[] GetStockMarketOffDates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetStockMarketOffDates", ReplyAction="http://tempuri.org/IStockMarket/GetStockMarketOffDatesResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.StockMarketOffDates[]> GetStockMarketOffDatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetMemberHoldings", ReplyAction="http://tempuri.org/IStockMarket/GetMemberHoldingsResponse")]
        DataLayer.Entities.MemberHolding[] GetMemberHoldings(int memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetMemberHoldings", ReplyAction="http://tempuri.org/IStockMarket/GetMemberHoldingsResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.MemberHolding[]> GetMemberHoldingsAsync(int memberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/SellShare", ReplyAction="http://tempuri.org/IStockMarket/SellShareResponse")]
        DataLayer.Entities.Order SellShare(DataLayer.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/SellShare", ReplyAction="http://tempuri.org/IStockMarket/SellShareResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Order> SellShareAsync(DataLayer.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/BuyShare", ReplyAction="http://tempuri.org/IStockMarket/BuyShareResponse")]
        DataLayer.Entities.Order BuyShare(DataLayer.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/BuyShare", ReplyAction="http://tempuri.org/IStockMarket/BuyShareResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Order> BuyShareAsync(DataLayer.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetSharesByName", ReplyAction="http://tempuri.org/IStockMarket/GetSharesByNameResponse")]
        DataLayer.Entities.Stock[] GetSharesByName(string stockName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/GetSharesByName", ReplyAction="http://tempuri.org/IStockMarket/GetSharesByNameResponse")]
        System.Threading.Tasks.Task<DataLayer.Entities.Stock[]> GetSharesByNameAsync(string stockName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockMarketChannel : StockMarketServiceReference.IStockMarket, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockMarketClient : System.ServiceModel.ClientBase<StockMarketServiceReference.IStockMarket>, StockMarketServiceReference.IStockMarket {
        
        public StockMarketClient() {
        }
        
        public StockMarketClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockMarketClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMarketClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMarketClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataLayer.Entities.Member Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Member> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public DataLayer.Entities.Member Register(DataLayer.Entities.Member member) {
            return base.Channel.Register(member);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Member> RegisterAsync(DataLayer.Entities.Member member) {
            return base.Channel.RegisterAsync(member);
        }
        
        public DataLayer.Entities.Stock CreateStock(DataLayer.Entities.Stock stock) {
            return base.Channel.CreateStock(stock);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Stock> CreateStockAsync(DataLayer.Entities.Stock stock) {
            return base.Channel.CreateStockAsync(stock);
        }
        
        public DataLayer.Entities.Stock UpdateStock(DataLayer.Entities.Stock stock) {
            return base.Channel.UpdateStock(stock);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Stock> UpdateStockAsync(DataLayer.Entities.Stock stock) {
            return base.Channel.UpdateStockAsync(stock);
        }
        
        public DataLayer.Entities.Stock[] GetStocks() {
            return base.Channel.GetStocks();
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Stock[]> GetStocksAsync() {
            return base.Channel.GetStocksAsync();
        }
        
        public DataLayer.Entities.Stock GetStock(int id) {
            return base.Channel.GetStock(id);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Stock> GetStockAsync(int id) {
            return base.Channel.GetStockAsync(id);
        }
        
        public bool DeleteStock(int stockId) {
            return base.Channel.DeleteStock(stockId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStockAsync(int stockId) {
            return base.Channel.DeleteStockAsync(stockId);
        }
        
        public DataLayer.Entities.StockMarketOffDates Add(DataLayer.Entities.StockMarketOffDates stockMarketOffDates) {
            return base.Channel.Add(stockMarketOffDates);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.StockMarketOffDates> AddAsync(DataLayer.Entities.StockMarketOffDates stockMarketOffDates) {
            return base.Channel.AddAsync(stockMarketOffDates);
        }
        
        public bool Delete(int stockMarketOffDateId) {
            return base.Channel.Delete(stockMarketOffDateId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int stockMarketOffDateId) {
            return base.Channel.DeleteAsync(stockMarketOffDateId);
        }
        
        public DataLayer.Entities.StockMarketOffDates[] GetStockMarketOffDates() {
            return base.Channel.GetStockMarketOffDates();
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.StockMarketOffDates[]> GetStockMarketOffDatesAsync() {
            return base.Channel.GetStockMarketOffDatesAsync();
        }
        
        public DataLayer.Entities.MemberHolding[] GetMemberHoldings(int memberId) {
            return base.Channel.GetMemberHoldings(memberId);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.MemberHolding[]> GetMemberHoldingsAsync(int memberId) {
            return base.Channel.GetMemberHoldingsAsync(memberId);
        }
        
        public DataLayer.Entities.Order SellShare(DataLayer.Entities.Order order) {
            return base.Channel.SellShare(order);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Order> SellShareAsync(DataLayer.Entities.Order order) {
            return base.Channel.SellShareAsync(order);
        }
        
        public DataLayer.Entities.Order BuyShare(DataLayer.Entities.Order order) {
            return base.Channel.BuyShare(order);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Order> BuyShareAsync(DataLayer.Entities.Order order) {
            return base.Channel.BuyShareAsync(order);
        }
        
        public DataLayer.Entities.Stock[] GetSharesByName(string stockName) {
            return base.Channel.GetSharesByName(stockName);
        }
        
        public System.Threading.Tasks.Task<DataLayer.Entities.Stock[]> GetSharesByNameAsync(string stockName) {
            return base.Channel.GetSharesByNameAsync(stockName);
        }
    }
}
